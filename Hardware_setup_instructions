README

to start the driver
ros2 launch ur_robot_driver ur_control.launch.py ur_type:=ur3e robot_ip:=192.168.0.250 launch_rviz:=true
things to note:
- ensure that the robot ip matches

then start the program on the ur3e - ensure that the driver is done setting up and has stopped printing
note:
- ensure that the return pc ip is the same as your ip: you can check this with ifconfig
- once done you should see that the driver confirms ready to receive commands

next step is to start our moveIt launch with ros2 launch ur3_test_control moveL.launch.py
note:
- to run this you need to ros package from the git symbolicaly linked to your ros2 workspace

center pose
x: pose:
  position:
    x: -0.007513489702168074
    y: -0.34951772406979686
    z: 0.0818855213891164
  orientation:
    x: 0.10266693853203239
    y: -0.994715788312728
    z: -5.721744596536031e-06
    w: 1.3457703884266772e-05

drop pose:
pose:
  position:
    x: -0.29530003362180285
    y: -0.30987919323857865
    z: 0.1629595448838247
  orientation:
    x: -0.10268623815610047
    y: 0.9947137961422314
    z: 1.4407278592246102e-05
    w: 7.077439808658086e-06
    
    command to show end effector pose
	    ros2 run tf2_ros tf2_echo base_link tool0


At time 1744091488.302613047
- Translation: [0.270, -0.079, 0.086]
- Rotation: in Quaternion [-0.385, 0.923, -0.000, 0.000]
- Rotation: in RPY (radian) [-3.141, 0.000, -2.351]
- Rotation: in RPY (degree) [-179.970, 0.002, -134.683]
- Matrix:
 -0.703 -0.711  0.000  0.270
 -0.711  0.703 -0.000 -0.079
 -0.000 -0.001 -1.000  0.086
  0.000  0.000  0.000  1.000
  
  https://moveit.picknik.ai/humble/doc/examples/hand_eye_calibration/hand_eye_calibration_tutorial.html


cameraTransform = np.array([
            [1,0,0,0.01],
            [0,1,0,-0.057],
            [0,0,1,0],
            [0,0,0,1],
        ])
